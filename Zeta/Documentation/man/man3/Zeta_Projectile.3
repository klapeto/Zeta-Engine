.TH "Zeta::Projectile" 3 "Wed Feb 10 2016" "Zeta" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Zeta::Projectile \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Projectile\&.hpp>\fP
.PP
Inherits \fBZeta::Object\fP\&.
.PP
Inherited by \fBZeta::DirectionalProjectile\fP, and \fBZeta::SeekingProjectile\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBProjectileState\fP { \fBProjectileState::Charging\fP, \fBProjectileState::Moving\fP, \fBProjectileState::Dying\fP, \fBProjectileState::Dead\fP, \fBProjectileState::Inactive\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBupdate\fP (\fBFloat\fP elapsedTime)"
.br
.ti -1c
.RI "virtual void \fBonCollidedWith\fP (\fBObject\fP *other)"
.br
.ti -1c
.RI "void \fBdraw\fP (\fBFloat\fP x, \fBFloat\fP y, \fBFloat\fP \fBrotation\fP=0\&.0f, Float scale=1\&.0f) const "
.br
.ti -1c
.RI "void \fBaccept\fP (\fBVisitor\fP &visitor)"
.br
.ti -1c
.RI "void \fBclearCollidedObjects\fP ()"
.br
.ti -1c
.RI "void \fBonClick\fP (\fBObject\fP *other)"
.br
.ti -1c
.RI "void \fBdestroy\fP ()"
.br
.ti -1c
.RI "void \fBcharge\fP ()"
.br
.ti -1c
.RI "void \fBrelease\fP ()"
.br
.ti -1c
.RI "void \fBabort\fP ()"
.br
.ti -1c
.RI "void \fBapplyOffsets\fP ()"
.br
.ti -1c
.RI "bool \fBisToBeDeleted\fP () const "
.br
.ti -1c
.RI "void \fBsetTargetLocation\fP (\fBFloat\fP x, \fBFloat\fP y)"
.br
.ti -1c
.RI "\fBActiveAbility\fP * \fBgetParentAbility\fP ()"
.br
.ti -1c
.RI "virtual void \fBresetState\fP ()"
.br
.ti -1c
.RI "virtual void \fBpushToLua\fP (lua_State *lstate)"
.br
.ti -1c
.RI "\fBProjectile\fP (const \fBProjectileClass\fP *cls, \fBActiveAbility\fP *parent, \fBFloat\fP x, \fBFloat\fP y)"
.br
.ti -1c
.RI "virtual \fB~Projectile\fP ()"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum \fBAnimationDirection\fP { \fBAnimationDirection::Right\fP, \fBAnimationDirection::Left\fP, \fBAnimationDirection::Up\fP, \fBAnimationDirection::Down\fP }"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBmove\fP (\fBFloat\fP elapsedTime)"
.br
.ti -1c
.RI "void \fBcalculateAnimationDirection\fP (\fBLifeformState::Action\fP action, bool changeAnimation=false)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBZSet\fP< \fBObject\fP * > \fBcollidedObjects\fP"
.br
.ti -1c
.RI "\fBAnimationHandler\fP \fBanimation\fP"
.br
.ti -1c
.RI "const \fBProjectileClass\fP * \fBprojectileClass\fP"
.br
.ti -1c
.RI "\fBActiveAbility\fP * \fBparentAbility\fP"
.br
.ti -1c
.RI "\fBView\fP * \fBcamera\fP"
.br
.ti -1c
.RI "\fBVector2\fP \fBtargetPosition\fP"
.br
.ti -1c
.RI "\fBVector2\fP \fBdirection\fP"
.br
.ti -1c
.RI "\fBProjectileState\fP \fBstate\fP"
.br
.ti -1c
.RI "\fBLifeformState\fP \fBanimDir\fP"
.br
.ti -1c
.RI "\fBFloat\fP \fBrotation\fP"
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBZeta::Projectile::AnimationDirection\fP\fC [strong]\fP, \fC [protected]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIRight \fP\fP
.TP
\fB\fILeft \fP\fP
.TP
\fB\fIUp \fP\fP
.TP
\fB\fIDown \fP\fP
.SS "enum \fBZeta::Projectile::ProjectileState\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICharging \fP\fP
.TP
\fB\fIMoving \fP\fP
.TP
\fB\fIDying \fP\fP
.TP
\fB\fIDead \fP\fP
.TP
\fB\fIInactive \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Zeta::Projectile::Projectile (const \fBProjectileClass\fP *cls, \fBActiveAbility\fP *parent, \fBFloat\fPx, \fBFloat\fPy)"

.SS "virtual Zeta::Projectile::~Projectile ()\fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "void Zeta::Projectile::abort ()"

.SS "void Zeta::Projectile::accept (\fBVisitor\fP &visitor)\fC [virtual]\fP"

.PP
Implements \fBZeta::Object\fP\&.
.SS "void Zeta::Projectile::applyOffsets ()"

.SS "void Zeta::Projectile::calculateAnimationDirection (\fBLifeformState::Action\fPaction, boolchangeAnimation = \fCfalse\fP)\fC [protected]\fP"

.SS "void Zeta::Projectile::charge ()"

.SS "void Zeta::Projectile::clearCollidedObjects ()\fC [inline]\fP"

.SS "void Zeta::Projectile::destroy ()"

.SS "void Zeta::Projectile::draw (\fBFloat\fPx, \fBFloat\fPy, \fBFloat\fProtation = \fC0\&.0f\fP, \fBFloat\fPscale = \fC1\&.0f\fP) const\fC [virtual]\fP"
Draws the \fBObject\fP on screen\&. Be advised, the x,y, offsets might have different meaning on different implementations\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP X offset to be applied on the drawing 
.br
\fIy\fP Y offset to be applied on the drawing 
.br
\fIrotation\fP the rotation to be applied on the drawing 
.RE
.PP

.PP
Implements \fBZeta::Drawable\fP\&.
.SS "\fBActiveAbility\fP* Zeta::Projectile::getParentAbility ()\fC [inline]\fP"

.SS "bool Zeta::Projectile::isToBeDeleted () const\fC [inline]\fP"

.SS "virtual void Zeta::Projectile::move (\fBFloat\fPelapsedTime)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBZeta::SeekingProjectile\fP\&.
.SS "void Zeta::Projectile::onClick (\fBObject\fP *other)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBZeta::Object\fP\&.
.SS "virtual void Zeta::Projectile::onCollidedWith (\fBObject\fP *other)\fC [virtual]\fP"

.PP
Implements \fBZeta::Object\fP\&.
.PP
Reimplemented in \fBZeta::SeekingProjectile\fP\&.
.SS "virtual void Zeta::Projectile::pushToLua (lua_State *lstate)\fC [virtual]\fP"

.PP
Implements \fBZeta::LuaPushable\fP\&.
.PP
Reimplemented in \fBZeta::SeekingProjectile\fP\&.
.SS "void Zeta::Projectile::release ()"

.SS "virtual void Zeta::Projectile::resetState ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Reimplemented in \fBZeta::SeekingProjectile\fP\&.
.SS "void Zeta::Projectile::setTargetLocation (\fBFloat\fPx, \fBFloat\fPy)\fC [inline]\fP"

.SS "void Zeta::Projectile::update (\fBFloat\fPelapsedTime)\fC [virtual]\fP"

.PP
Implements \fBZeta::Updateable\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBAnimationHandler\fP Zeta::Projectile::animation\fC [protected]\fP"

.SS "\fBLifeformState\fP Zeta::Projectile::animDir\fC [protected]\fP"

.SS "\fBView\fP* Zeta::Projectile::camera\fC [protected]\fP"

.SS "\fBZSet\fP<\fBObject\fP*> Zeta::Projectile::collidedObjects\fC [protected]\fP"

.SS "\fBVector2\fP Zeta::Projectile::direction\fC [protected]\fP"

.SS "\fBActiveAbility\fP* Zeta::Projectile::parentAbility\fC [protected]\fP"

.SS "const \fBProjectileClass\fP* Zeta::Projectile::projectileClass\fC [protected]\fP"

.SS "\fBFloat\fP Zeta::Projectile::rotation\fC [protected]\fP"

.SS "\fBProjectileState\fP Zeta::Projectile::state\fC [protected]\fP"

.SS "\fBVector2\fP Zeta::Projectile::targetPosition\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Zeta from the source code\&.
